{% extends 'fibeWWWConfBundle::base.html.twig' %}

{% block title %}Equipment edit{% endblock title %}

{% block centerPanel %}
    {{ parent() }}
    <h1> Importer </h1>

    <div class="col-lg-6">
        <h3 class="text-info">Import a data from file</h3>
        <form id="EventImportForm"  class="input-append">
            <label for="EventImport"> 
                Available XML input format are : 
                    <span class="badge badge-success" ><i class="fa fa-check" ></i>  XML</span>
                    <span class="badge badge-success"><i class="fa fa-check" ></i>  XLS</span>
                  
                {% if not wwwConf.isEmpty() %}<p class="text-warning"><i class="icon-s"></i>Your conference will be emptied first!</p>{% endif %}
            </label>
            
        	<div class="input-group">
					  <span class="input-group-addon">Mapping file</span>
				  <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
				    Mapping file <span class="caret"></span>
				  </button>
				  <ul class="dropdown-menu" role="menu">
				    <li><a href="#">OCS format</a></li>
				    <li><a href="#">SWC format</a></li>
				  </ul>
			</div>
              
            <div class="input-group">
				   <span class="input-group-addon">File to import</span>
                    <input id="EventImport" method="POST" action="/uploadDataset" class="form-control" name="EventImport" value="Choose your file" type="file"/>
              
            </div>

              <span class="input-group-btn">
                    <button disabled="disabled" type="submit"class="btn btn-default">
                        Process import <i class="icon-arrow-right"></i> 
                    </button>
                </span>
        </form> 

        <h3 class="text-info">Action</h3> 
        <a  class="empty-conf btn btn-danger btn-xs" 
            {% if  wwwConf.isEmpty() %}
            disabled="disabled" 
            {% else %} 
            {% endif %}
            href="{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}"> 
            <i class="fa fa-trash-o"></i> Empty conference
        </a>             
    </div>


	<!-- Modal -->
	<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	  <div class="modal-dialog">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
	        <h3 class="modal-title" id="myModalLabel">Confirm empty</h3>
	      </div>
	      <div class="modal-body">
	        <form>
	          <div class="modal-body">
	            <h4 class="text-wrning">In order to confirm, type <b>Empty !</b> if you really want to empty the conference.</h4>
	            <div class="input-group input-group-lg"> 
	              <input name="confirmEmptyInput" id="confirmEmptyInput" type="text" class="form-control input-lg" value="Empty ?">
	            </div> 
	          </div>
	          <div class="modal-footer">
	            <a class="btn btn-default" data-dismiss="modal">Close</a>
	            <button type="submit" class="btn btn-primary">Save changes</button>
	          </div>
	        </form> 
	      </div>
	    </div><!-- /.modal-content -->
	  </div><!-- /.modal-dialog -->
	</div><!-- /.modal -->
    <a href="{{path('schedule_import_xls')}}">Test xls import</a>
 {% endblock %}


 {%  block javascripts_page %} 
  <script src="{{ asset('bundles/fibewwwconf/js/moment.min.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/Importer.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/rdf_config.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/ocs_config.js') }}" type="text/javascript" ></script>


        <script type="text/javascript" >

        $(document).ready(function(){

            /*********       run the importer and send the serialized obj to php   **********/ 
            var ConfRdfFile; 


            /*********       confirm empty          **********/
            $('.empty-conf').click(function(){
                confirmEmpty(function(){
                    window.location = "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}";
                })
                return false;
            }); 


            //parse file
            var confOwlUriInput = document.getElementById("EventImport");  
            var dataArray;

            var reader = new FileReader();
            reader.onload = function(e) {
                run( this.result,function(data){
                    dataArray = data;
                    bootstrapAlert("info",' '+getMsgUl(dataArray,"found"),"Info : ");
                    $('#EventImportForm [type="submit"]').removeAttr("disabled")
                                                         .removeClass("btn-default")
                                                         .addClass("btn-success");
                    $(confOwlUriInput).parent().addClass('has-success');
                },function(msg)
                {
                    $(confOwlUriInput).parent().addClass('has-warning');
                    bootstrapAlert("warning", msg || "there was an error importing this file");
                });  
            }

            $(confOwlUriInput).off("change").on("change",function(){
                $(this).parent().removeClass('has-success');
                dataArray = undefined;
                $('#EventImportForm [type="submit"]').attr("disabled","disabled")
                                                     .removeClass("btn-success")
                                                     .addClass("btn-default");

                reader.readAsText(this.files[0]); 
            })

            //empty conf if needed
            $('#EventImportForm').submit(function(event) {  
                if(!dataArray){ 
                    bootstrapAlert("info",' please, choose a file to import'); 
                    return false;
                }

                {% if not wwwConf.isEmpty() %} 
                    confirmEmpty(function(){
                        bootstrapAlert("info",' emptying the conference...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                        $.ajax({ 
                                type: "GET",
                                cache: false,  
                                url: "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}",
                                success:function(a,b,c)
                                {
                                    bootstrapAlert("success",'conference emptied');
                                    bootstrapAlert("success",' now sending file...',"conference emptied,","<i class='icon-spinner icon-spin'></i>"); 
                                    sendSerializedConf(dataArray);
                                },
                                error:function(a,b,c)
                                { 
                                    console.log("ERROR empting the conf")
                                    console.log(a)
                                    console.log(b)
                                    console.log(c) 
                                },
                            });
                    }) 
                {% else %} 
                    bootstrapAlert("info",' sending file...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                    sendSerializedConf(dataArray);
                {% endif %}
                return false;
            }); 


            //send file
            function sendSerializedConf(dataArray){
                var data = {dataArray:JSON.stringify(dataArray)};
                //DBimport
                $.ajax({ 
                    type: "POST",
                    cache: false,  
                    url: "{{ path('schedule_admin_DBimport') }}",
                    data: data,
                    success:function(a,b,c)
                    {
                        bootstrapAlert("success",' '+getMsgUl(dataArray,"added")+'Please refresh this page to find out imported items.'); 
                    },
                    error:function(a,b,c)
                    {
                        bootstrapAlert("warning",'import failed because : '+c);
                        console.log(a)
                        console.log(b)
                        console.log(c)
                        $(confOwlUriInput).parent().addClass('has-warning');  
                    },
                });
            }
         }); 

    
        function confirmEmpty(callback){ 
            $('#confirmModal').modal('show');
            $('#confirmModal').one('shown.bs.modal', function() {
                $(this).find("input").first().focus();
            }) 
            $('#confirmModal').find("form").one("submit",function(e){
                                    if($('#confirmEmptyInput').val() === "Empty !"){
                                        callback();
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                                    else{
                                        bootstrapAlert("info",' Conference clear cancelled.');
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                              });
        }
 
        function getMsgUl(dataArray,endString){
            var msg = "";
            if(dataArray.conference.setAcronym)msg += dataArray.conference.setAcronym;
            else if(dataArray.conference.setSummary)msg += dataArray.conference.setSummary;
            msg += "<ul>"; 
            for (var i in dataArray) 
                if(dataArray[i] && dataArray[i].length >0)
                    msg +="<li>"+dataArray[i].length +" "+i+" "+endString+" !</li>"

            return msg + "</ul>";
        }
         </script>   
{% endblock %}

