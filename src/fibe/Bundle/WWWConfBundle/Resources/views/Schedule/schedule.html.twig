{% extends 'fibeWWWConfBundle::base.html.twig' %}


{% block title %}Schedule{% endblock title %}

{% block content %}


{% block sideBarPanel%} 
 {{ parent() }}

{% endblock %}


<div class="content" id="schedule-view">
  <div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-9">
        <div id='calendar'></div> 
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-3">
      <div id="sidebar">  
        {# <div class="checkbox">
          <label>
            <input id="reposition" checked="checked" type="checkbox"> Reposition parent/child <small>(<i>need performance</i>)</small>
          </label>
        </div> 
        <div class="history ">
          <button id="backwardBtn" class="btn btn-default" disabled="disabled" ><i class="icon-undo"></i></button>
          <button id="forewardBtn" class="btn btn-default" disabled="disabled" ><i class="icon-repeat"></i></button>
        </div> #}
        <div id="resourceView">
            <select class="form-control"> 
                <option value="classic">Calendar</option> 
                <optgroup label="Ressources views">
                  <option value="location" >Location</option> 
                  {# <option value="category" >Category</option>  #}
                </optgroup>
            </select>
        </div>
        <div id="filters">  

          <h4>Filter by categories</h4>
          <div class="filter">
            <select multiple class="form-control" data-filter="category_ids">
              {% for category in categories %}
                <option data-color="{{category.color}};" value="{{category.id}}">{{category.name}}</option>
              {% endfor %}
            </select>  
          </div>

          <h4>Filter by locations</h4>
          <div class="filter">
            <select multiple class="form-control" data-filter="location_ids">
              {% for location in locations %}
                <option value="{{location.id}}">{{location.name}}</option>
              {% endfor %}
            </select>  
          </div> 

          <h4>Filter by topic</h4>
          <div class="filter">
            <select multiple class="form-control" data-filter="topic_ids">
              {% for topic in topics %}
                <option value="{{topic.id}}">{{topic.name}}</option>
              {% endfor %}
            </select>  
          </div>
        </div>

        <h4>Dateless Events</h4>
        <div id='external-events' class='scroller'>
        </div> 
      </div>  
    </div>
  </div>


  <div id="modal"  class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h3 class="modal-title">Edit event</h3>
        </div>
        <div class="modal-body">
          <p>One fine body&hellip;</p>
        </div> 
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->
   
  <div id="modal-new-event"  class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h3 class="modal-title">Event creation</h3>
        </div>
        <form>
          <div class="modal-body">
            <div class="input-group input-group-lg"> 
              <input name="name" id="name" type="text" class="form-control input-lg" placeholder="Give me a name!">
            </div> 
          </div>
          <div class="modal-footer">
            <a  class="btn btn-default" data-dismiss="modal">Close</a>
            <button type="submit" class="btn btn-primary">Save changes</button>
          </div>
        </form>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->
   
  <div id="modal-set-parent"  class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h3 class="modal-title"> 
            <span class="icon-stack">
              <i class="icon-sign-blank icon-stack-base"></i>
              <i class="icon-sitemap icon-light"></i>
            </span>  
            Affect parent
          </h3>
        </div>
        <div class="modal-body"> 
          Set 
          <p class="sub-event event-name well"></p> 
          as sub event of 
          <p class="super-event event-name well"></p>
          ?
        </div> 
        
        <div class="modal-footer row-fluid">
          <div class="col-lg-6"><button class="col-md-6 btn btn-default btn-block no" data-dismiss="modal"><i class='icon-remove'></i> no</button></div>
          <div class="col-lg-6"><button class="col-md-6 btn btn-success btn-block yes" data-dismiss="modal"><i class='icon-ok'></i> ok</button></div>
        </div>

      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->
</div>


{% endblock %}



{% block stylesheets_page %}
  <link href="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.css') }}" rel='stylesheet' />
  <link href="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.print.css') }}" rel='stylesheet' media='print' /> 
  <link href="{{ asset('bundles/fibewwwconf/css/fullcalendarAddedUI.css') }}" rel='stylesheet'/>  
  <link href="{{ asset('bundles/fibewwwconf/css/jquery.mCustomScrollbar.css') }}" rel='stylesheet'/>  
{% endblock stylesheets_page %}



{%  block javascripts_page %}
  <script src="{{ asset('bundles/fibewwwconf/js/moment.min.js') }}" type="text/javascript" ></script>
       
  <script type="text/javascript" src="{{ asset('js/jquery-ui.custom.js') }}"></script>
  <script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.js') }}"></script>

  <script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/added/filter.js') }}"></script>
  <script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/added/sidebar.js') }}"></script>

  <script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/added/CalEvent.js') }}"></script>
  <script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/added/EventCollection.js') }}"></script>
    
  <script src="{{ asset('bundles/fibewwwconf/js/jquery.mCustomScrollbar.concat.min.js') }}"></script>
  <script type="text/javascript">
    var Events = {};
    var calendar_events_indexes   = {}; 
    var calendar_events   = []; 
    var mainConfEvent;
    var dragged = null;
    var $sidebar;
    var $calendar;
    var stopRender = false;
    var fetched = false;
    var firstWeekDay = 1;

    var logtime;
    //path
    var DATA_FEED_URL = "{{ path('schedule_view_event_get') }}";
    var op = {  
        getOrderedUrl     : "{{ path('exporter_api', { 'entity_reference': 'schedule_event','_format': 'json' }) }}?conference_id={{currentConf.id}}",
        getDatalessUrl     : "{{ path('exporter_api', { 'entity_reference': 'schedule_event','_format': 'json' }) }}?only_instant=whatever&conference_id={{currentConf.id}}",
        updateUrl     : "{{ path('schedule_view_event_edit') }}", //event modal form
        quickAddUrl   : DATA_FEED_URL + "?method=add", 
        quickUpdateUrl: DATA_FEED_URL + "?method=update",
        quickDeleteUrl: DATA_FEED_URL + "?method=remove", 
        resFeedURL    : "",
        data          : {}
    }; 

    //top right button
    var isClassicView = true;
    var viewBtns = {
      month:{
        classic:"month",
        resource:"resourceMonth",
        elem:$('<span class="fc-button fc-state-default fc-corner-left" unselectable="on">month</span>')},
      week:{
        classic:"agendaWeek",
        resource:"resourceWeek",
        elem:$('<span class="fc-button fc-state-default fc-state-active" unselectable="on">week</span>')},
      day:{
        classic:"agendaDay",
        resource:"resourceDay",
        elem:$('<span class="fc-button fc-state-default fc-corner-right" unselectable="on">day</span>')},
    };

    // resources view
    var currentView = "week"; 
    var resConfig = {
      location : {
        url : "{{ path('exporter_api', { 'entity_reference': 'schedule_location','_format': 'json' }) }}?conference_id={{currentConf.id}}",
        parse : function(e){ 
          if(e.location && e.location.id!= ""){
            return e.location.id;
          }else{
            return "other";
          }
        }
      },category : {
        url : "{{ path('exporter_api', { 'entity_reference': 'schedule_category','_format': 'json' }) }}?conference_id={{currentConf.id}}",
        parse : function(e){
          console.log(e)
          if( e.categories && e.categories.length < 1) return "other" ; 
          for(var i in e.categories){
            var c = e.categories[i];
            rtn.push(c.id);
          } 
          return rtn;
        }
      }
    };
    var currentRes = "location";

    $(document).ready(function() {    

      //init $ vars
      var $modal = $('#modal').hide();
      var $modalNewEvent = $('#modal-new-event').hide();
      var $modalSetParent = $('#modal-set-parent').hide();
      var $modalBody = $modal.find(".modal-body");
      var $modalNewEventBody = $modalNewEvent.find(".modal-body"); 
      
      $calendar = $('#calendar');
      $sidebar = $('#external-events');

      // get first day
      var firstDay = moment('5000-10-10'); 
      if(moment('{{currentConf.mainConfEvent.startAt|date("Y-m-d")}}').isBefore(firstDay)){
          firstDay = moment('{{currentConf.mainConfEvent.startAt|date("Y-m-d")}}');
      }   
      if(firstDay.isSame(moment('5000-10-10'))) firstDay = moment(); 
      var initing = true;





      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------- render events from json datasource -----------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/
  
 
      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- fullcalendar options ------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/ 
      calendarOption = { 
          header: {
              left: 'prev,next',
              center: 'title',
              right: '' // computed in resource view
          },   
          aspectRatio: 1.6,
          editable: true,
          firstDay: firstWeekDay,         
          year: firstDay.year(), 
          month: firstDay.month(),
          date: firstDay.date(), 
          resources : resConfig[currentRes].url,
          windowResize: function(view) {
              EventCollection.addEventToComputeCountRange(mainConfEvent) 
          }, 
          //get events
          events : function(start, end, callback) { 
              //events have already been fetched
              
              if(fetched === true ){
                fetched = false;
                stopRender = false;  
                // console.log("fetched",calendar_events_indexes) 
                // console.log(calendar_events)
                console.log("########fullcalendar rendering "+calendar_events.length+" events")

                logtime = moment();
                callback(calendar_events ); 
                console.debug(moment().diff(logtime)+" for fullcalendar to render"); 
                logtime = moment();
                return;
              } 
              //compute dates to filter
              if(initing){ 
                op.data['before']=moment(firstDay).endOf('week').add("days",firstWeekDay).format();
                op.data['after']=moment(firstDay).startOf('week').add("days",firstWeekDay).format();
                initing = false;
              }else{
                op.data['before']=moment(end).format();
                op.data['after']=moment(start).format();
              }
                console.log("########fetching")
              
              $.get(
                op.getOrderedUrl,
                op.data,
                function(events) {  
                    // if(stopRender===true)return;
                    console.log(events) 
                    if(events.length!=0)bootstrapAlert("success",events.length+" events have been well fetched" );
                    else {bootstrapAlert("info","no event found");}

                    logtime = moment();

                    // Events = {};

                    //initialize events
                    calendar_events   = []; 
                    calendar_events_indexes   = {};  

                    var i = 0;
                    // var orphanChildren= [];
                    //non-blocking loop
                    function doWork() {
                      
                      var known = !!Events[events[i].id];
                      var event = new CalEvent(events[i]);
                      if(!known)EventCollection.addEventToComputeCountRange(event);

                      if(event.mainconfevent){
                        mainConfEvent = event;
                        if(mainConfEvent.parent.id != ""){
                          mainConfEvent.persist();
                        } 
                      }  
                      // if(event.parent.id == ""){
                      //   orphanChildren.push(event);
                      // }
                     

                      i++; 

                      //last iteration  
                      if (!events[i]) { 
                        fetched = true; 
                        // $calendar.fullCalendar( 'removeEvents');
                        // for(var j=0;j<orphanChildren.length;j++){
                        //   if(orphanChildren[j] == mainConfEvent)continue;
                        //   orphanChildren[j].parent.id = mainConfEvent.id;
                        //   orphanChildren[j].persist();
                        //   bootstrapAlert("info","event "+orphanChildren[j].title+" was an orphan, so it's now the child of "+mainConfEvent.title)
                        // }
                        console.debug(moment().diff(logtime)+" to init"); 
                        EventCollection.refetchEvents(false,true);
                      }else if (stopRender!==true){ 
                        //the loop goes on
                        setTimeout(doWork, 1);
                      }
                    }; 
                    if(events[i])setTimeout(doWork, 1);
                    //$calendar.fullCalendar('renderEvent',e  ); // 3rd arg make the event "stick" 
                },
                'json'
              ).error(function(jqXHR, textStatus, errorThrown) {
                bootstrapAlert("warning","there was an error during the fetch of events",""); 
              });
              bootstrapAlert("info","event request sent","","<i class='icon-spinner icon-spin'></i>");
          },
          eventClick: function(calEvent, jsEvent, view) {  
              $.ajax({
                  url: op.updateUrl+"?id="+calEvent.id,  
                  success: function(doc) {
                      $modal.modal("show");
                      $modalBody.html(doc);
                      bootstrapAlert("stop");

                          // rerender if changed
                      $modalBody.find("#eventForm,#delete-event-form").submit(function(){
                        $modal.off('hide.bs.modal').on('hide.bs.modal', function () {
                          EventCollection.refetchEvents(true);
                          // $calendar.fullCalendar( 'refetchEvents' );
                        })
                      }) 
                  }
              }); 
              bootstrapAlert("info","edit <b>"+(calEvent['title'] || calEvent['name'])+"</b> request sent","Info : ","<i class='icon-spinner icon-spin'></i>");  
          },
          selectable: true,
          selectHelper: true,
          select: function(start, end, allDay) { //new event
              $modalNewEvent.modal("show")
                            .on('show.bs.modal', function() {
                                $(this).find("#name").focus();
                            });

              $modalNewEvent.find("form").off("submit").submit(function(e){
                var title = $(this).find("#name").val();
                if (title) {
                    var tmp = {
                        title    : title,
                        parent   : {id:mainConfEvent.id},
                        children : [],
                        start    : start,
                        end      : moment(start).isSame(moment(end)) ? moment(start).add("hours",1).format() : end,
                        allDay   : allDay
                    }; 
                    console.log(tmp);

                    $.post(
                        op.quickAddUrl,
                        $.extend( {} , tmp ),
                        function(response) {  
                            bootstrapAlert("success","event <b>"+tmp['title']+"</b> has been well added");
                            tmp.id =response.id;
                            var ev = new CalEvent(tmp);   
                            ev.setParent(mainConfEvent) 
                            Events[ev.id] = ev;   
                            // ev.render();
                            // 
                            EventCollection.addEventToComputeCountRange(ev,{allBrosInDay:true}); 
                            ev.renderForRefetch(); 

                            if(response.mainConfEvent){
                              EventCollection.updateMainConfEvent(response.mainConfEvent.start,response.mainConfEvent.end); 
                            }  
                            EventCollection.refetchEvents(); 
                        },
                        'json'
                    );
                    bootstrapAlert("info","add request sent","Info : ","<i class='icon-spinner icon-spin'></i>");
                  $modalNewEvent.modal("hide");
                }else{
                    bootstrapAlert("info","You must give a name to the event");
                }
                return false;
              });
              $calendar.fullCalendar('unselect');
              
          },
          //resizing events in calendar
          eventResize: function(event,dayDelta,minuteDelta,revertFunc){ 

              var oldEnd = moment(event["end"]).subtract({'d':dayDelta,'m':minuteDelta});

              setTimeout(function(){   
                  console.log(dayDelta,minuteDelta,event); 
                  if(!event.isOneDayLong() && !event.allDay){ 
                    // event.allDay = true;
                    event.fitToDay( event["start"],oldEnd.format());  
                  }

                  event.updateParentDate();
                  event.updateChildrenDate(); 
     
                  EventCollection.addEventToComputeCountRange(event,{allBrosInDay:true}); 

                  event.renderForRefetch();

                  EventCollection.refetchEvents(false,true);
                  event.persist(); 
              },0);
          },  
          // viewRender : function( view, element ){
          //   // fetched = false; 
          //   if(mainConfEvent)
          //   EventCollection.addEventToComputeCountRange(mainConfEvent,{allEventsInDay:true});
          // },
          eventAfterAllRender: function( view ) { 
              //avoid repeating this function 10 times... 
              if(!mainConfEvent || stopRender)return;
              clearTimeout(repositionTimeout);
              repositionTimeout=setTimeout(function(){    
                logtime = moment()
                  updateEventArray();  
                  stylizeBlock();
                console.debug(moment().diff(logtime)+" to updateEventArray & stylizeBlock"); 
              },repositionTime);
                  
          }, 
          droppable: true, // allows things to be dropped into the calendar
          drop: function(date, allDay) { //drop from sidebar
          
              // retrieve the dropped element's stored Event Object 
              var event = dragged[1]; 
              // var event = $.extend({},dragged[1]);  
              if(event.elem)event.elem.remove();
              // delete event.elem;
              event.allDay = allDay;
              event['start'] = date;

              EventCollection.addEventToComputeCountRange(event);
              event.renderForRefetch();

              // event = new CalEvent(event); 
              console.log("dropped from sidebar", event);
              // assign it the date that was reported
              
              // e['end'] = moment(date).add("hours",1).format();

              event.SetRecurDate();
              // event.deleteParent();
              Events[event.id] = event;

              event.setParent(mainConfEvent);
              event.updateParentDate(); 
              EventCollection.refetchEvents();
              event.persist();


              // render the event on the calendar  
                
          },
          eventCalculateWidth : function(event, seg, leftmost, availWidth, outerWidth, levelI, bottom, top, forward, dis,view) {  
            if(event.allDay){
              return;
            }
            var width = availWidth + ( currentView == "day" ? 55 : 10 );
            var height = bottom - top;
            var left = leftmost;

            var Hmargin = 5;
            var Wmargin = 3;

            //go to the parent place
            var parentId = event.parent.id;
            while(mainConfEvent.id !== parentId){ 
                var parentCount   = EventCollection.broCountRange[parentId].count,
                    parentRange   = EventCollection.broCountRange[parentId].range; 

              console.log("## eventCalculateWidth"+event.id+" : parent : "+parentId+" count "+count+" range "+range)
                width /= parentCount;
                left += width*parentRange;

                left   += Wmargin;
                // width  -= (2*Wmargin);
                top     = top + Hmargin;
                height -= (2*Hmargin);

                parentId = Events[parentId].parent.id;
            }

            var count   = EventCollection.broCountRange[event.id].count,
                range   = EventCollection.broCountRange[event.id].range; 

            width = width/count;
            left = left+(width*range);


            seg.outerWidth = width;
            seg.left = left;
            seg.outerHeight = height;
            seg.top = top;
          },
          eventDragStart: function( event, jsEvent, ui, view ) { 
              dragged = [ ui.helper[0], event ];
              setTimeout(function(){   
                dragChildren(event, jsEvent, ui, view);
              },1);
          },
          eventDragStop: function( event, jsEvent, ui, view ) {  
              // var parent = EventCollection.find(event.parent.id,{noSidebar:true}); 
              // alert("1"+parent.start+"\n"+parent.end) 
              var event = Events[event.id]
              var parent = EventCollection.find(event.parent.id,{noSidebar:true}); 
              var children = EventCollection.getChildren(event,{concat:true,onlyEvent:true});
              // if(isClassicView !== true ){
              //   console.log("ressources changed ! "+ event.resource)
              // }
              EventCollection.addEventToComputeCountRange(event,{allBrosInDay:true}); 

              //TODO : parent  has here a wrong start/end updated from somewhere
              //TODO : parent  has here a wrong start/end updated from somewhere
              //TODO : parent  has here a wrong start/end updated from somewhere 


              dragged = [ ui.helper[0], 
                          event, 
                          {start:moment(event.start),end:moment(event.end)},
                          {start:moment(parent.start),end:moment(parent.end)},
                          $(children).map(function(){return {start:moment(this.start),end:moment(this.end)};})
                        ];  

              // alert(parent.start+" \n"+parent.end)
              
              //TODO : parent  has here a wrong start/end updated from somewhere
              //TODO : parent  has here a wrong start/end updated from somewhere
              //TODO : parent  has here a wrong start/end updated from somewhere 
              setTimeout(function(){  
                  // EventCollection.addEventToComputeCountRange(event,{allEventsInDay:true}); 
                  var event = dragged[1] 
                  var parentDate = dragged[3];
                  var childrenDates = dragged[4];
                  // alert(parent.start+" \n"+parent.end) 
                   
                  var parent = EventCollection.find(event.parent.id,{noSidebar:true});
                  var children = EventCollection.getChildren(event,{concat:true,onlyEvent:true});
                  parent.start = parentDate.start.format(); 
                  parent.end = parentDate.end.format(); 
                  stopRender = true;
                  //get diff
                  var diff = moment(dragged[2].start).diff(moment(event['start']));
 
                  //apply to children  
                  $.each(children,function(i,child){ 
                    // var startScript = moment();
                    child['start']  = moment(childrenDates[i]['start']).subtract(diff);
                    child['end']  = moment(childrenDates[i]['end']).subtract(diff);
           
                    EventCollection.addEventToComputeCountRange(child);
                    child.renderForRefetch();
                    child.formatDate() 
                    child.persist() 
                    // console.debug(moment().diff(startScript)+" to affect one child"); 
                  }); 
                  // console.debug(moment().diff(startScript)+" to affect children");
 
                  //apply to parent
                  
                  // alert(event.title+" "+(event.isOutOf(parent,true)? "out of parent":"in the parent")+" "+parent.title)
                  // alert(parent.start+"\n"+parent.end)
                  // alert(event.start+"\n"+event.end)
                  if(event.isOutOf(parent,true)){
                    //event dropped out of parent
                    console.log(" #### moved out ####");  
                    event.setParent(mainConfEvent);
                    // event.updateParentDate(); 
                  }else{
                    //still inside but may need a parent update (to properly contain child) 
                      event.updateParentDate();  
                  }  
 

     
                  EventCollection.addEventToComputeCountRange(event,{allEventsInDay:true});
                  // event.renderForRefetch();
 
                  EventCollection.refetchEvents(); 
                  event.persist(); 

              },0);

 
          },
          // eventDrop : function(event,dayDelta,minuteDelta,allDay,revert,ev,ui,resource ){
          //     //TODO : parent  has here a wrong start/end updated from somewhere
          //     //TODO : parent  has here a wrong start/end updated from somewhere
          //     //TODO : parent  has here a wrong start/end updated from somewhere 
          //   },
      };

      //launch calendar
      $calendar.fullCalendar(calendarOption);  
      $calendar.fullCalendar('changeView', viewBtns[currentView].classic );
      $('.fc-header-left')
          .append(
            $('<span class="fc-header-space"></span><button class="fc-button fc-state-default fc-corner-left fc-corner-right"> First day</button>')
              .click(function(e){ 
                $calendar.fullCalendar( 'gotoDate', firstDay.year(), firstDay.month(), firstDay.date() ) 
              })
          ).append(
            $('<span class="fc-header-space"></span><button class="fc-button fc-state-default fc-corner-left fc-corner-right"><span class="fa fa-refresh"></span></button>')
              .click(function(e){ 
                EventCollection.resetEvents();
              })
          ) 

      /*-------------------------------------------------------------------------------------------------*/
      /*------------------------------------- update function -------------------------------------------*/
      /*-------------------------------------------------------------------------------------------------*/

      /**
       * function triggered when all events have been rendered 
       */
      function updateEventArray(){ 

          var startScript = moment();
          // calendar_events = [];
          var calendarEvents = $calendar.fullCalendar('clientEvents'); //loop only on calendar events

          for (var i in calendarEvents){
            var calendarEvent = calendarEvents[i];
            if(Events[calendarEvent.id]){
              Events[calendarEvent.id] = calendarEvent;
            } 
          } 
          var foundElem = []; 
          $(".fc-view-"+(isClassicView ? viewBtns[currentView].classic : viewBtns[currentView].resource)+" .fc-event:visible").each(function(i){ 
            var id = parseInt($(this).data("id"));  
            foundElem.push(id)
            if(Events[id])Events[id]['elem'] = $(this);
          });
          // console.debug(moment().diff(startScript)+" to updateEventArray");
          // console.log("event array updated",Events);
      }


      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- position ------------------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/ 

      /**
       *  add UI (popover, border color etc...)
       *  just after to the fullcalendar "all event render" function
       */
 
      var repositionTime = 0;
      var repositionTimeout; 
      function stylizeBlock(){ 
          var popoverWidth = 276;
          var dragOverEvents = []; 
          var currentDragOverEvent = null;
            // console.log("stylizeBlocks : ",events);
                /*****************  styling (opacity, hover, drag, drop) ********************/
            for (var i in Events){
                var event = Events[i]; 

                var element = event.elem; 
                if(!element)  continue; //event is in another view

                //action on hovered by another dragging event  
                element.data("border-color",element.css("border-color"))
                       // .data("background-color",element.css("background-color"))
                       .data("prop",getProp(element)); 

                  
                if( calendarEvents = $calendar.fullCalendar('clientEvents',event.id)){
                    element.droppable({ 
                        tolerance: "pointer" ,
                        over: function( ev, ui ) {
                          if ( $(ui.draggable).hasClass("fc-event") ){ 
                              var event = EventCollection.getEventByDiv($(this));
                              var draggedEvent = dragged[1];

                              //check if it's going to do a loop in the tree
                              if(event.isChild(draggedEvent)){
                                return;
                              }

                              if(currentDragOverEvent)currentDragOverEvent.elem.removeClass("drag-over-events");

                              currentDragOverEvent = {id:event.id,elem:$(this)};  
                              dragOverEvents.push(currentDragOverEvent);
                              if(draggedEvent.parent.id !== event.id) currentDragOverEvent.elem.addClass("drag-over-events")  
                              
                          }
                        },
                        out: function( ev, ui ) { 
                          if ( $(ui.draggable).hasClass("fc-event") ){
                              // $(this).animate({"background-color":$(this).data("background-color")},{queue:false});
                              $(this).removeClass("drag-over-events")
                              var event = EventCollection.getEventByDiv($(this));

                              for(var i in dragOverEvents){
                                if(dragOverEvents[i].id == event.id){
                                  dragOverEvents.splice(i,1); 
                                }
                              }
                              if(dragOverEvents.length>0){
                                currentDragOverEvent = dragOverEvents[dragOverEvents.length-1]; 

                                // if(dragged[1].parent.id !== event.id)
                                  currentDragOverEvent.elem.addClass("drag-over-events");
                              }
                          }
                        },
                        drop: function( ev, ui ) { 
                          if ( $(ui.draggable).hasClass("fc-event") &&  currentDragOverEvent){  
                            
                              var event = Events[currentDragOverEvent.id];
                              if(currentDragOverEvent.id === event.id){
                                currentDragOverEvent.elem.removeClass("drag-over-events");
                                dragOverEvents = []; 
                                currentDragOverEvent = null;
                              } else {
                                return;
                              }

                              var draggedEvent = dragged[1]; 
                              // check if it's not already a child
                              if(draggedEvent.parent.id === event.id){
                                return;
                              }  
                              //check if it's going to do a loop in the tree
                              if(event.isChild(draggedEvent)){ 
                                return;
                              }  
                              console.log(event)
                              console.log(draggedEvent)

                              // if(event.isOutOf(draggedEvent))return;  
                              
                              setTimeout(function(){   

                                $modalSetParent.modal('show').find(".sub-event").text(draggedEvent.title);
                                $modalSetParent.find(".super-event").text(event.title);

                                $modalSetParent.find('button.yes').off("click").click(function(){ 
                                    //set event as parent of draggedEvent and children relation
                                    console.log(draggedEvent+" is now the child of "+event.id)
                                    
                                    draggedEvent.setParent(event);
                                    draggedEvent.updateParentDate(); 
                                    
                                    draggedEvent.renderForRefetch();
                                    EventCollection.addEventToComputeCountRange(draggedEvent,{allBrosInDay:true});

                                    event.renderForRefetch();
                                    EventCollection.addEventToComputeCountRange(event,{allBrosInDay:true});
                                    
                                    EventCollection.refetchEvents();
                                    draggedEvent.persist(); 
                                });   
                              },0); 

                          }
                        }
                    }); 

                            /*************** popover *****************/
                    element.popover({
                        trigger : 'hover',
                        html : true,
                        placement : function( context,source){
                          var popoverProp = getProp($(context));
                          var eventProp = getProp(source);
                          var calendarProp = getProp($calendar);
                          // console.log(popoverProp,eventProp,calendarProp)
                          if(eventProp.x + eventProp.w + popoverWidth < calendarProp.x + calendarProp.w )
                            return "right";
                          if(eventProp.x - popoverWidth > calendarProp.x)
                            return "left";
                          return "bottom";
                        },
                        title : ' <b><span class="muted">#'+event.id+'</span> '+event.title+'</b>',
                        content : event.getPopoverContent(),
                    });
              }
                    /*************** hover : change border color  *****************/
              element.hover(function(){
                    //enter
                    $(this).animate({"border-color":"#3F3F3F"},{queue:false});

                    var elemEvent = EventCollection.getEventByDiv($(this));
                    var childrenDiv = EventCollection.getChildren(elemEvent,{concat:true,onlyEvent:true});
                    for (var j in childrenDiv){
                      var curChildDiv = EventCollection.getDivById(childrenDiv[j].id);
                      if(!curChildDiv)continue;
                      curChildDiv.animate({opacity:0.3},{duration:'fast',queue:false});
                    }
                },function(){
                    $(this).animate({"border-color":$(this).data("border-color")},{queue:false})
                    var elemEvent = EventCollection.getEventByDiv($(this));
                    var childrenDiv = EventCollection.getChildren(elemEvent,{concat:true,onlyEvent:true});
                    for (var j in childrenDiv){
                      var curChildDiv = EventCollection.getDivById(childrenDiv[j].id );
                      if(!curChildDiv)continue;
                      curChildDiv.animate({opacity:1},{duration:'fast',queue:false})
                    }
                });    
              }
      }

      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- position ------------------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/




      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- start/end drag ------------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/
 

      var draggedProp,draggedStart,children;

      //update the ui onMouseMove to make children follow the parent
      function dragChildren(event){
        // console.log(event['start'])
        // console.log(draggedProp)
        // console.log("parentElement",parentElement.text(),parentElement)
        children = EventCollection.getChildren(event,{concat:true}); 
        draggedStart = moment(event['start']); 

        // $.each(children,function(i,child){ 
        //   $(child.elem).fadeTo(200, 0.5);
        // });
        // console.log("lol ",children);

        //update helper
        var draggedProp = getProp(event.elem)
        $(event.elem).off("mousemove").mousemove( function(ev){ 
          var newdraggedProp = getProp(event.elem);
          var diff = { 
            x : (draggedProp.x - newdraggedProp.x) , 
            y : (draggedProp.y - newdraggedProp.y)
          };
          if(diff.x !== 0  || diff.y !== 0 ){
            draggedProp =  newdraggedProp;  

            $.each(children,function(i,child){
               // console.log(child)
              var childProp = getProp(child.elem);
              // console.log("lol ",childProp);
              $(child.elem).css("left",childProp.x-diff.x+"px")
                           .css("top" ,childProp.y-diff.y+"px");
            });
          }
        }); 
      } 
 



      /*-------------------------------------------------------------------------------------------------*/
      /*------------------------------------- initialize sidebar ----------------------------------------*/
      /*-------------------------------------------------------------------------------------------------*/
      
      var sidebar = new Sidebar('#external-events');
      sidebar.populate(op.getDatalessUrl);

      //dropped from calendar to sidebar;
      $(sidebar).on("dropped",function(ev,calEvent){  
          console.log("dropped",calEvent)
          var event = Events[calEvent.id];
          EventCollection.fitMainConfEvent();
          

          //set as instant event 
          event['end'] = moment(event['start']);
          event.formatDate();
          // remove event from calendar 
          event.removeForRefetch();
          // $calendar.fullCalendar('removeEvents',event.id); 
          event.persist();

          //affect children
          var children = EventCollection.getChildren(event, {concat:true,onlyEvent:true} ); 
          $.each(children,function(i,child){
              //set as instant event 
              child['end'] = moment(child['start']);
              child.formatDate();
              // remove event from calendar 
              child.removeForRefetch(); 
              $calendar.fullCalendar('removeEvents',child.id);  
              sidebar.setSidebarEvent(child,true); 
              child.persist();
          });
          //set as sidebar draggable 
          sidebar.setSidebarEvent(event,true);
          EventCollection.refetchEvents(); 
      }).on("drag",function(ev,event){ 
          dragChildren(event);
      });  

      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- initialize filters --------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/


      //init filters
      var filter = new initFilter();
      $(filter).on("change", function(ev,key,val) {
 
          EventCollection.addEventToComputeCountRange(mainConfEvent);
          console.log("filtering : ",val,key,op.data); 
          op.data[key] = val;  
          stopRender = true;
          EventCollection.refetchEvents(true);
          // $calendar.fullCalendar('refetchEvents');   
      });


      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- resources view ------------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/ 
      
      initViewsBtns(viewBtns);
      $('#resourceView select').change(function(e){ 
        isClassicView = $(this).val() == "classic";
        if(isClassicView){ //render the classic view   
          // $('.fc-event').remove();
          $calendar.fullCalendar('changeView', viewBtns[currentView].classic );
          EventCollection.refetchEvents(); 
          // $calendar.fullCalendar( 'renderEvent', Events);
          // $calendar.trigger("stopRender");
          // fetch = false;
          // $calendar.fullCalendar('refetchEvents');   
        }else{ //render a resource view

          var resource = $(this).val();
            currentRes = resource;
          op.resFeedURL = resConfig[resource].url; 
          // $('.fc-event').remove();
          //  
          $calendar.fullCalendar('changeView', viewBtns[currentView].resource );
          EventCollection.refetchEvents(); 
          // $calendar.fullCalendar('refetchEvents');
          // $calendar.fullCalendar('refetchResources');


          
          //seems to be useless...
          //can fetch resources but can't go back to classic view when we destroy calendar
          // $calendar.fullCalendar( 'destroy' ); 
          // $calendar.fullCalendar(calendarOption);


        }
        initViewsBtns(viewBtns); 
      })
      function initViewsBtns(viewBtns){
        for( var i in viewBtns){
          viewBtns[i].elem.appendTo(".fc-header-right").off("click").click({i:i},function(e){ 
                  currentView = e.data.i;
                  $(this).siblings().removeClass("fc-state-active");
                  $(this).addClass("fc-state-active"); 
                  // EventCollection.refetchEvents();
                  $calendar.fullCalendar('changeView', (isClassicView ? viewBtns[currentView].classic : viewBtns[currentView].resource)); 
          })
        }
      }

      /*-----------------------------------------------------------------------------------------------------*/
      /*------------------------------------- History -------------------------------------------------------*/
      /*-----------------------------------------------------------------------------------------------------*/ 


    //   //render an Events array
    //   //TODO look at eventResize and eventDrop  revertFn 
    //   function renderHistory(events){
    //       console.log("renderHistory",events);
    //       Events = events;
    //       var instant_events   = []; 
    //       $calendar.fullCalendar( 'removeEvents');
    //       storeinHistory = false;
    //       for (var i in Events){
    //         var event = Events[i]; 
    //         if(events[i].isInstant()){
    //           instant_events.push(event);
    //         }else{ 
    //             $calendar.fullCalendar( 'renderEvent',event);
    //         } 
    //       }
    //       setInstantEvents(instant_events); 
    //   }

    //   //init history
    //   History.setForewardBtn($('#forewardBtn'))
    //          .setBackwardBtn($('#backwardBtn')); 
    //   $(History).on('updateState',function(ev,events){ 
    //     renderHistory(events);
    //   })
    });//end $(document).ready


    // var History = {
    //     _statesHistory : [],
    //     _currentState : -1,
    //     _backwarded : false,

    //     _backwardBtn : '',
    //     _forewardBtn : '',
        
    //     _forewardBtn : '',
    //     _renderingState : true,
    //     isRenderingStateFromHistory : function(){
    //       if(this._renderingState===true){
    //         this._renderingState = false;
    //         return true;
    //       }
    //       return false;
    //     },
    //     setBackwardBtn : function(btn){
    //       this._backwardBtn = $(btn);
    //       this._backwardBtn.click(function(){History._backward()}); 
    //       return this;
    //     },
    //     setForewardBtn : function(btn){
    //       this._forewardBtn = $(btn);
    //       this._forewardBtn.click(function(){History._foreward()});   
    //       return this;
    //     },
    //     storeState : function(model){
    //       console.log("history state stored");
    //       var state = jQuery.extend(true, {}, model); 
    //       var arraySplice = this._backwarded ? 2000 : 0; 
    //       this._backwarded = false;
    //       this._currentState++;
    //       this._statesHistory.splice(this._currentState,arraySplice,state);
    //       this._checkBtn();
    //       return this;
    //     },
    //     //pseudo private methods

    //     //disable btn
    //     _checkBtn : function(){
    //         if(this._currentState<=0)this._backwardBtn.attr("disabled","disabled");
    //         else this._backwardBtn.removeAttr("disabled");

    //         if(!this._statesHistory[this._currentState+1])this._forewardBtn.attr("disabled","disabled");
    //         else this._forewardBtn.removeAttr("disabled"); 
    //     },
    //     _backward : function(btn){
    //         if(this._currentState<=0)return;
    //         this._currentState--;
    //         this._backwarded=true;
    //         // fb(this._statesHistory);
    //         this._render();
    //     },
    //     _foreward : function(btn){
    //         if(!this._statesHistory[this._currentState+1])return;
    //         this._currentState++;
    //         this._render();
    //     },
    //     _render : function(){
    //         this._checkBtn();
    //         this._renderingState = true;
    //         $(this).trigger('updateState', jQuery.extend(true, {}, this._statesHistory[this._currentState]));  
    //     },
    // };

    //css utils fn

    jQuery.fn.cssNumber = function(prop){
        var v = parseInt(this.css(prop),10);
        return isNaN(v) ? 0 : v;
    };

    //get css positionning properties from an event $div (see EventCollection.getDivById) 
    function getProp(elem){
        return {
          y: $(elem).cssNumber("top"),
          x: $(elem).cssNumber("left"),
          w: $(elem).cssNumber("width"),
          h: $(elem).cssNumber("height")
        };
    }

  </script>    
	
{% endblock javascripts_page %}

