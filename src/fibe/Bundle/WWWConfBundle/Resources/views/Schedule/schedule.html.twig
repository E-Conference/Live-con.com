{% extends 'fibeWWWConfBundle::base.html.twig' %}


{% block title %}Schedule{% endblock title %}




{% block body %} 
  {{ parent() }}
      

<div id='calendar'></div> 
<div id="sidebar">  
  <h4>Filter by category</h4>
  <div id='filter-category'>
  </div>
  <h4>Filter by location</h4>
  <div id='filter-location'>
  </div>
  <h4>Instant Events</h4>
  <div id='external-events'>
  </div>
</div>  


<div id="modal"  class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Edit event</h4>
      </div>
      <div class="modal-body">
        <p>One fine body&hellip;</p>
      </div> 
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
 
<div id="modal-new-event"  class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"></h4>
      </div>
      <form>
        <div class="modal-body">
          <div class="input-group input-group-lg"> 
            <input name="name" id="name" type="text" class="form-control input-lg" value="New event" placeholder="New event">
          </div>
          <div class="input-group input-group-lg">
            <span class="input-group-addon">Parent</span>
            <select name="parent_id" id="parent_id" class="form-control input-lg"></select>
          </div>
        </div>
        <div class="modal-footer">
          <a  class="btn btn-default" data-dismiss="modal">Close</a>
          <button type="submit" class="btn btn-primary">Save changes</button>
        </div>
      </form>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
 


{% endblock %}



 {% block stylesheets %}
  {{ parent() }}
 
    <!--
    <link rel='stylesheet' type='text/css' href='http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/start/jquery-ui.css' />
    --> 

<link href="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.css') }}" rel='stylesheet' />
<link href="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.print.css') }}" rel='stylesheet' media='print' />
    <style type="text/css">
        
    .navbar { 
      margin-bottom: 0; 
    }
    #calendar {  
        width  : 80%; 
        margin : 0;
        padding: 1em;
        float  : left
    }
        
    #sidebar {   
        padding   : 1em 0.5em;
        /*height  : 100%; */
        width     : 20%;
        padding   : 0 10px; 
        background: #eee;
        z-index   : 1;
        float     : right;
    }
        
    #sidebar h4 {
        font-size  : 16px;
        margin-top : 0;
        padding-top: 1em;
    }
        
    #sidebar p {
        margin   : 1.5em 0;
        font-size: 11px;
        color    : #666;
    }
        
    #sidebar p input {
        margin        : 0;
        vertical-align: middle;
    } 

    #external-events{
        border        : 1px solid #ccc;
        padding       : 1em 0.5em;
        margin        : 0;
        margin-bottom : 1em;
        position      : relative; 
        z-index       : 2; 
        /*overflow-y    :    auto;*/
        height        : 100%;  /*sidebar h4 height*/

    }
        
    .external-event { /* try to mimick the look of a real event */
        margin-bottom: 1em;
        padding      : 2px 4px;
        background   : #3366CC;
        color        : #fff;
        font-size    : .85em;
        cursor       : pointer;
    }
    #modal .modal-dialog { 
        width: 90%; 
    }  
  .fc-view { /* prevents dragging outside of widget */
      overflow: visible;
  }


    </style>

{% endblock stylesheets %}



{%  block javascripts %}   
  {{ parent() }} 
<script src="{{ asset('bundles/fibewwwconf/js/moment.min.js') }}" type="text/javascript" ></script>
     
<script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/jquery-ui-1.10.3.custom.min.js') }}"></script>
<script src="{{ asset('bundles/fibewwwconf/js/fullcalendar/fullcalendar.js') }}"></script>

    
    <script type="text/javascript">
        $(document).ready(function() {    
 
            //event edit popup
            var $modal = $('#modal').hide();
            var $modalNewEvent = $('#modal-new-event').hide();
            var $modalBody = $modal.find(".modal-body");
            var $modalNewEventBody = $modalNewEvent.find(".modal-body");
            var $calendar = $('#calendar');
            var $sidebar = $('#external-events');

           // calcule du premier jour
            var firstDay = moment('5000-10-10');
            {% for event in currentConf.confEvents %}
                {% if date(event.startAt) > date("1980-01-02") %}
                    
                    if(moment('{{event.startAt|date("Y-m-d")}}').isBefore(firstDay)){
                        firstDay = moment('{{event.startAt|date("Y-m-d")}}');
                    }

                {% endif %}
            {% endfor %}
            if(firstDay.isSame(moment('5000-10-10'))) firstDay = moment();

            
            //path
            var DATA_FEED_URL = "{{ path('schedule_view_event_get') }}";

            var op = {  
                url           : DATA_FEED_URL + "?method=list",  
                quickAddUrl   : DATA_FEED_URL + "?method=add", 
                quickUpdateUrl: DATA_FEED_URL + "?method=update",
                updateUrl     : "{{ path('schedule_view_event_edit') }}",
                quickDeleteUrl: DATA_FEED_URL + "?method=remove", 
                getOrderedUrl     : "{{ path('exporter_api', { 'entity_reference': 'schedule_event','_format': 'json' }) }}",

            };


 
        /*------------------------------------- initialize the calendar ----------------------------------------*/
        var dragged = null;
        $calendar.fullCalendar({ 
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            }, 
            editable: true,
            //fist day
            year: firstDay.year(), 
            month: firstDay.month(),
            date: firstDay.date(),
            //get events
            events: function(start, end, callback) { 
              $.get(
                op.getOrderedUrl,
                {},
                function(events) {  
                    bootstrapAlert("info","event has been well fetched","",'<i class="icon-info"></i> icon-info');
                    renderEvent(events);
                    //$calendar.fullCalendar('renderEvent',e  ); // 3rd arg make the event "stick" 
                },
                'json'
              ); 
            },  
            eventClick: function(calEvent, jsEvent, view) {
 
                $('.fc-event').click(function(){
                    $.ajax({
                        url: op.updateUrl+"?id="+calEvent.id,  
                        success: function(doc) {  
                            $modal.modal("show");
                            $modalBody.html(doc);
                            bootstrapAlert("stop");
                        }
                    });
                    bootstrapAlert("info","edit request sent","Info","<i class='icon-spinner icon-spin'></i>");
                }); 

            },
            selectable: true, 
            selectHelper: true,
            select: function(start, end, allDay) {
                $modalNewEvent.modal("show");
                var selectHtml='';
                $.each($calendar.fullCalendar('clientEvents'),function(){
                  selectHtml += '<option value="'+this.id+'">'+this.title+'</option> ' 
                });
                $modalNewEvent.find("select").html(selectHtml);
                $modalNewEvent.find(".modal-title").html("New "+(allDay ? "<b>all day</b>" : "")+" event from <br/>"+start+" to <br/>"+end);
                $modalNewEvent.find("form").submit(function(e){ 
                  var title = $(this).find("#name").val();
                  var parent_id = $(this).find("#parent_id").val(); 
                  if (title && parent) {
                      var e = {
                          title: title,
                          parent_id: parent_id,
                          start: start,
                          end: end,
                          allDay: allDay
                      };
                      $.post(
                              op.quickAddUrl,
                              formatDate(e),
                              function(response) {  
                                  bootstrapAlert("success","event has been well added","",'<i class="icon-info"></i> icon-info');
                                  e.id=response.id;
                                  $calendar.fullCalendar('renderEvent',e  ); // 3rd arg make the event "stick" 
                              },
                              'json'
                      );
                      bootstrapAlert("info","add request sent","Info","<i class='icon-spinner icon-spin'></i>");
                  }
                  $modalNewEvent.modal("hide");
                  return false;
                })
                $calendar.fullCalendar('unselect');
            },
            eventResize: function(event,dayDelta,minuteDelta,revertFunc) {

                    $.post(
                            op.quickUpdateUrl,
                            formatDate($.extend({}, event)),
                            function(doc) {  
                                bootstrapAlert("success","event has been well updated","",'<i class="icon-info"></i> icon-info'); 
                            },
                            'json'
                    );
                    bootstrapAlert("info","update request sent","Info","<i class='icon-spinner icon-spin'></i>");

            },
            eventDataTransform: function(data){return data;},
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar !!!
            eventDrop : function(e){ 
                    $.post(
                            op.quickUpdateUrl,
                            formatDate($.extend({}, e)),
                            function(doc) {  
                                bootstrapAlert("success","event has been well updated","",'<i class="icon-info"></i> icon-info'); 
                            },
                            'json'
                    );
                    bootstrapAlert("info","update request sent","Info","<i class='icon-spinner icon-spin'></i>");
            },
            drop: function(date, allDay) { // this function is called when something is dropped
            
                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject');
                
                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject);
                
                // assign it the date that was reported 
                copiedEventObject.start  = date;
                copiedEventObject.end    = moment(date).add("hours",1);
                copiedEventObject.allDay = allDay; 
 
                $.post(
                        op.quickUpdateUrl,
                        formatDate(copiedEventObject),
                        function(doc) {   
                                bootstrapAlert("success","event has been well updated","",'<i class="icon-info"></i> icon-info'); 
                        },
                        'json'
                );
                bootstrapAlert("info","update request sent ","Info","<i class='icon-spinner icon-spin'></i>");
                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $calendar.fullCalendar('renderEvent', copiedEventObject);
                
                $(this).remove();  
            },
            eventDragStart: function( event, jsEvent, ui, view ) { 
              dragged = [ ui.helper[0], event ];
            }
        }); 
        $calendar.fullCalendar('changeView', "agendaWeek" );
        /*------------------------------------- initialize the calendar ----------------------------------------*/
 

        /*------------------------------------- initialize the sidebar ----------------------------------------*/
        function setInstantEvents(instant_events){
          $sidebar.html("");  
          var eventHtml =  "<div class='external-event'></div>";
          var $sidebarTmp = $(eventHtml).appendTo($sidebar).hide();

          var gid = 1; // event.id == 0 considered to be undefined (boo) 
          
          for (var i in instant_events){ 
            var $event = $(eventHtml);
            $event = sidebarDraggable($event,instant_events[i]);
          } 
          $sidebar.droppable({
            over: function( event, ui ) {  
                if( event && $(ui.draggable).hasClass("fc-event-draggable")) {
                    var event = dragged[1];
                    $(this).css("border-color","green"); 
                    $sidebarTmp = sidebarEventHtml($event,event)
                    $sidebarTmp.show() ;
                }
            },
            out: function( event, ui ) { 
                if($(ui.draggable).hasClass("fc-event-draggable")) {
                    $(this).css("border","solid 1px #ccc"); 
                    $sidebarTmp.hide();
                } 
            },
            drop: function( event, ui ) {
              if ( dragged && ui.helper && ui.helper[0] === dragged[0]){alert("")
                $sidebarTmp.hide();
                $(this).css("border","solid 1px #ccc"); 
                var event = dragged[1];
                var $event = dragged[1];
                event.end = moment(event.start);
                $calendar.fullCalendar('removeEvents',event.id);

                // var $event = sidebarDraggable(event);
                var $event = sidebarDraggable($event,event)

                $.post(
                    op.quickUpdateUrl,
                    formatDate(event),
                    function(doc) {   
                        bootstrapAlert("success","event has been well updated","",'<i class="icon-info"></i> icon-info'); 
                    },
                    'json'
                );
                bootstrapAlert("info","update request sent ","Info","<i class='icon-spinner icon-spin'></i>");
              }
            }
          }); 

          function sidebarEventHtml ($event,event){
            $event.appendTo($sidebar)
                  .html(event.title);
            $event.css({
                      "background-color": event.color,
                      "border-color": event.border_color || event.color,
                   });  
          }

          function sidebarDraggable($event,event){ 
            sidebarEventHtml ($event,event);
            $event.draggable({
                      zIndex: 999,
                      revert: true,      // will cause the event to go back to its
                      revertDuration: 0  //  original position after the drag
                    })
                    .data('eventObject', event);
            // store the Event Object in the DOM element so we can get to it later
            return $event;
          }

        }



      /*------------------------------------- end initialize the sidebar ----------------------------------------*/ 

      /*------------------------------------- initialize filters ----------------------------------------*/ 

      var categories = [] ;
      {% for category in categories %} 
        categories.push({
          id   : "{{category.id}}",
          name : "{{category.name}}",
          color: "{{category.color}}", 
        }) 
      {% endfor %}
      var locations= []  ;
      {% for location in locations %} 
        locations.push({
          id   : "{{location.id}}",
          name : "{{location.name}}",
          color: "{{location.description}}", 
        }) 
      {% endfor %}

      // console.log(categories,locations);
 
      var $categoryCtn = $('#filter-category').html("");
      var $locationCtn = $('#filter-location').html(""); 
      var $categorySelect = $('<select name="filter_category_select" id="filter_category_select" class="form-control" ><option value="*">See all</option></select>')
                                  .appendTo($categoryCtn)
                                  .change(function(){
                                    var data = $(this).val()=='*' ? {} : { category_id: $(this).val() };
                                    $.get(
                                      op.getOrderedUrl,
                                      data,
                                      function(events) {  
                                          bootstrapAlert("success","event has been well fetched","",'<i class="icon-info"></i> icon-info');
                                          renderEvent(events);
                                          //$calendar.fullCalendar('renderEvent',e  ); // 3rd arg make the event "stick" 
                                      },
                                      'json'
                                    );
                                    bootstrapAlert("info","get filtered request sent","Info","<i class='icon-spinner icon-spin'></i>"); 
                                  });
      var $locationSelect = $('<select name="filter_location_select" id="filter_location_select" class="form-control" ><option value="*">See all</option></select>')
                                  .appendTo($locationCtn)
                                  .change(function(){
                                    var data = $(this).val()=='*' ? {} : { location_id: $(this).val() };
                                    $.get(
                                      op.getOrderedUrl,
                                      data,
                                      function(events) {  
                                          bootstrapAlert("success","event has been well fetched","",'<i class="icon-info"></i> icon-info');
                                          renderEvent(events);
                                          //$calendar.fullCalendar('renderEvent',e  ); // 3rd arg make the event "stick" 
                                      },
                                      'json'
                                    );
                                    bootstrapAlert("info","get filtered request sent","Info","<i class='icon-spinner icon-spin'></i>"); 
                                  });


      for(var i =0; i < categories.length;i++){
        $categorySelect.append('<option value="'+categories[i].id+'">'+categories[i].name+'</option>');
      }
      for(var i =0; i < locations.length;i++){
        $locationSelect.append('<option value="'+locations[i].id+'">'+locations[i].name+'</option>');
      }

      /*------------------------------------- end initialize filters ----------------------------------------*/

      function renderEvent(events){
        $calendar.fullCalendar( 'removeEvents');
        //TODO ALLDAY
        var instant_events = [];
        for (var i in events){
          events[i]["title"] = events[i].name;
          events[i]["parent_id"] = events[i].parent_id;
          events[i]["start"] = events[i].start_at;
          events[i]["end"] = events[i].end_at; 
          var diff =moment(events[i]["start"]).diff(events[i]["end"]);
          var instant = (diff  == 0 ) || (diff  == 1 );
          var allDay = !instant && ((diff % 86400000 == 0 ) || (diff % 86400000 == 1 ));
          events[i]["allDay"] = allDay;  
          if(instant)instant_events.push(events[i]);
          else
            $calendar.fullCalendar( 'renderEvent',events[i],true);
        }
        setInstantEvents(instant_events);
      }
    });

    

     function formatDate(e){
        e.start = moment(e.start).format();
        e.end = moment(e.end).format();
        return e;
     }

    </script>    
	
{% endblock javascripts %}

