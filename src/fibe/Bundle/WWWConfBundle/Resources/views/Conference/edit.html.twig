{% extends 'fibeWWWConfBundle::base.html.twig' %}

{% block title %}edit conference{{ parent() }}{% endblock title %}
{% block body %}
{{ parent() }}
<div class="container">
    <div class="row center">
        <div class="page-header">
            <div class="page-header well">
                    
                <div class="row">
                    <div class="col-lg-4">
                        <h1>{{ wwwConf.mainConfEvent.summary }}</h1> 
                        <ul>
                            <li> {{ wwwConf.events|length }} events </li>
                            <li> {{ wwwConf.papers|length }} papers </li>
                            <li> {{ wwwConf.locations|length }} locations </li>
                            <li> {{ wwwConf.persons|length }} persons </li>
                            <li> {{ wwwConf.topics|length }} topics </li>
                            <li> {{ wwwConf.organizations|length }} organizations </li> 
                            <li> {{ wwwConf.confManagers|length }} confManagers </li>
                        </ul> 
                    </div>
                    <div class="col-lg-8">

                        <div id="map" style="height:300px"></div>
                    </div>
                </div> 
                <hr/>
                <a  id="showConfForm" class="btn btn-warning">
                     <i class="icon-edit"></i> Edit conference
                </a>
                <div id="conference-edit" class="row ">
                    <div class="col-lg-6">
                        <h3 class="text-info">Conference info  </h3>
                        <form class="input-append" method="POST" action="" {{ form_enctype(form) }} >
                                {{ form_widget(form) }} 
                                {{ form_errors(form) }}   
                                <button type="submit" class="btn btn-block btn-success">
                                    <i class="icon-ok"></i> 
                                </button> 

                            <div style="visibility:hidden;display:none;height:0px;" id="hiddenInputs">{{ form_rest(form) }}</div>  
                        </form> 

                    </div>
                    <div class="col-lg-6">
                        <h3 class="text-info">Import a Conference from file  </h3>
                        <form id="EventImportForm"  class="input-append">
                            <label for="EventImport"> 
                                Available XML input format are : 
                                    <span class="badge badge-success" ><i class="icon-ok" ></i>  RDF</span>
                                    <span class="badge badge-success"><i class="icon-ok" ></i>  OWL</span>
                                    <span class="badge badge-success"><i class="icon-ok" ></i>  OCS</span> 
                                {% if not wwwConf.isEmpty() %}<p class="text-warning"><i class="icon-s"></i>Your conference will be emptied first!</p>{% endif %}
                            </label>
                            
                            <div class="input-group">
                                <input id="EventImport" method="POST" action="/uploadDataset" class="form-control" name="EventImport" value="Choose your file" type="file"/>
                                <span class="input-group-btn">
                                    <button disabled="disabled" type="submit"class="btn btn-default">
                                        Process import <i class="icon-arrow-right"></i> 
                                    </button>
                                </span>
                            </div><!-- /input-group --> 
                        </form> 

                        <h3 class="text-info">Action</h3> 
                        <a  class="empty-conf btn btn-danger btn-xs" 
                            {% if  wwwConf.isEmpty() %}
                            disabled="disabled" 
                            {% else %} 
                            {% endif %}
                            href="{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}"> 
                            <i class="icon-trash"></i> Empty conference
                        </a>
                        
                        

                    </div>
                </div><!-- #conference-edit -->    
            </div>
        </div> 
    </div> 
</div>

<!-- Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3 class="modal-title" id="myModalLabel">Confirm empty</h3>
      </div>
      <div class="modal-body">
        <form>
          <div class="modal-body">
            <h4 class="text-wrning">In order to confirm, type <b>Empty !</b> if you really want to empty the conference.</h4>
            <div class="input-group input-group-lg"> 
              <input name="confirmEmptyInput" id="confirmEmptyInput" type="text" class="form-control input-lg" value="Empty ?">
            </div> 
          </div>
          <div class="modal-footer">
            <a class="btn btn-default" data-dismiss="modal">Close</a>
            <button type="submit" class="btn btn-primary">Save changes</button>
          </div>
        </form> 
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
{% endblock body %}

{%  block stylesheets %}
{{ parent() }}
    <style type="text/css">
        #conference-edit > *{
            margin-top:1.5em;
            margin-bottom:0.35em;
        }
        #toggleConfNameForm{
            margin:2em 1em 0em 0em ; 
            float:left;
        }
        #confName{
            padding: 1px;
        }
    </style>
     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
{% endblock %}

{%  block javascripts %} 
{{ parent() }}
        <script src="{{ asset('bundles/fibewwwconf/js/importer/OWLImporter.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/rdf_config.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/ocs_config.js') }}" type="text/javascript" ></script>
         <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
        <script src="{{ asset('bundles/fibewwwconf/js/moment.min.js') }}" type="text/javascript" ></script>
        <script type="text/javascript" >

    /*

          function FormPost(uri,form,callback){
              $.ajax({
                  type: "POST",
                  url:uri,
                  async: false,
                  data: form.serialize(),
                  success:function(a,b,c) { 
                               if(callback)callback();
                  }
              });
          } 
      */ 
        function initializeMap(){
            // set up the map
            map = new L.Map('map');

            // create the tile layer with correct attribution
            var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
            var osmAttrib='Map data Â© OpenStreetMap contributors';
            var osm = new L.TileLayer(osmUrl, {minZoom: 1, maxZoom: 15, attribution: osmAttrib});  
            map.addLayer(osm);     
 
        {% if (location.latitude is not empty) and (location.longitude is not empty) %} 
            map.setView(new L.LatLng({{location.latitude}}, {{location.longitude}}),13);
            marker = L.marker([{{location.latitude}}, {{location.longitude}}]).addTo(map);
        {% else %}
            map.setView(new L.LatLng(40,10),1);

        {% endif %}
        }
        var marker;
        var map;
        $(document).ready(function(){
             
            initializeMap();

            /*********       show / hide edit mode          **********/
            $('#conference-edit').hide();  
            //toggle with 2 functions is deprecated in jquery v8 and suppressed in v10
           function showForm() { 
                $('#conference-edit').toggle({duration : 400}); 
                $(this).html('<i class="icon-arrow-left" ></i> Hide edit mode');
                $(this).one("click", hideForm);
                map.on('click', function(e){
                   if(marker)map.removeLayer(marker);
                   console.log(e.latlng)
                   marker = new L.marker(e.latlng).addTo(map); 
                   //UPDATE FIELDS
                   $('#fibe_bundle_wwwconfbundle_wwwconftype_mainConfEvent_location_latitude').val(e.latlng.lat);
                   $('#fibe_bundle_wwwconfbundle_wwwconftype_mainConfEvent_location_longitude').val(e.latlng.lng);
                });
            }
            function hideForm() { 
                $('#conference-edit').toggle({duration : 400});
                $(this).html('<i class="icon-edit"></i> Edit conference');
                $(this).one("click", showForm);
                map.off('click');
            }
            $("#showConfForm").one("click", showForm);



            /*********       run the importer and send the serialized obj to php   **********/
             
            
            var ConfRdfFile; 


            /*********       confirm empty          **********/
            $('.empty-conf').click(function(){
                confirmEmpty(function(){
                    window.location = "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}";
                })
                return false;
            }); 


            //parse file
            var confOwlUriInput = document.getElementById("EventImport"); 
            var file = confOwlUriInput.files[0];
            var dataArray;
            $(confOwlUriInput).change(function(){
                var file = this.files[0];
                var reader = new FileReader();
                reader.onload = function(e) {
                    run( this.result,function(data){
                        dataArray = data;
                        bootstrapAlert("info",' '+getMsgUl(dataArray,"found"),"Info : ");
                        $('#EventImportForm [disabled="disabled"]').removeAttr("disabled");
                        $(confOwlUriInput).parent().addClass('has-success');
                    },function(msg)
                    {
                        $(confOwlUriInput).parent().addClass('has-warning');
                        bootstrapAlert("warning", msg || "there was an error importing this file");
                    });  
                }
                reader.readAsText(file); 
            })

            //empty conf if needed
            $('#EventImportForm').submit(function(event) {  
                if(!dataArray){ 
                    bootstrapAlert("info",' please, choose a file to import'); 
                    return false;
                }

                {% if not wwwConf.isEmpty() %} 
                    confirmEmpty(function(){
                        bootstrapAlert("info",' emptying the conference...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                        $.ajax({ 
                                type: "GET",
                                cache: false,  
                                url: "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}",
                                success:function(a,b,c)
                                {
                                    bootstrapAlert("success",'conference emptied'); 
                                    sendSerializedConf(dataArray);
                                },
                                error:function(a,b,c)
                                { 
                                    console.log("ERROR empting the conf")
                                    console.log(a)
                                    console.log(b)
                                    console.log(c) 
                                },
                            });
                    }) 
                {% else %} 
                    sendSerializedConf(dataArray);
                {% endif %}
                return false;
            }); 


            //send file
            function sendSerializedConf(dataArray){
                var data = {dataArray:JSON.stringify(dataArray)};
                //DBimport
                bootstrapAlert("info",' sending file...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                $.ajax({ 
                    type: "POST",
                    cache: false,  
                    url: "{{ path('schedule_admin_DBimport') }}",
                    data: data,
                    success:function(a,b,c)
                    {
                        bootstrapAlert("success",' '+getMsgUl(dataArray,"added")+'Please refresh this page to find out imported items.');
                        $(confOwlUriInput).parent().addClass('has-success');
                    },
                    error:function(a,b,c)
                    {
                        bootstrapAlert("warning",'import failed because : '+c);
                        console.log(a)
                        console.log(b)
                        console.log(c)
                        $(confOwlUriInput).parent().addClass('has-warning');  
                    },
                });
            }
         }); 

    
        function confirmEmpty(callback){ 
            $('#confirmModal').modal('show')
                              .find("form").submit(function(e){ 
                                    if($('#confirmEmptyInput').val() === "Empty !"){
                                        callback();
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                                    else{
                                        bootstrapAlert("info",' Import cancelled.');
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                              });
        }
 
        function getMsgUl(dataArray,endString){
            var msg = "<ul>";
            for (var i in dataArray) 
                if(dataArray[i] && dataArray[i].length >0)
                    msg +="<li>"+dataArray[i].length +" "+i+" "+endString+" !</li>"

            return msg + "</ul>";
        }
         </script>   
{% endblock %}







