{% extends 'fibeWWWConfBundle::base.html.twig' %}

{% block title %}edit conference{{ parent() }}{% endblock title %}
{% block body %}
{{ parent() }}
<div class="container">
    <div class="row center">
        <div class="page-header">
            <div class="page-header well">
                    
                <div class="row">
                    <div class="col-lg-4">
                        <h1>{{ wwwConf.mainConfEvent.summary }}</h1> 
                        <ul>
                            <li> {{ wwwConf.events|length }} events </li>
                            <li> {{ wwwConf.papers|length }} papers </li>
                            <li> {{ wwwConf.locations|length }} locations </li>
                            <li> {{ wwwConf.persons|length }} persons </li>
                            <li> {{ wwwConf.keywords|length }} keywords </li>
                            <li> {{ wwwConf.organizations|length }} organizations </li>
                            <li> {{ wwwConf.themes|length }} themes </li>
                            <li> {{ wwwConf.confManagers|length }} confManagers </li>
                        </ul>
                    </div>
                    <div class="col-lg-6">
                        <a  id="showConfForm"  class="btn btn-warning btn-create">
                             <i class="icon-edit"></i>
                        </a>
                        <form id="confNameForm"  class="input-append" method="POST" action="">
                              
                                 {{ form_widget(form) }} 
                                 {{ form_errors(form) }}   
                                <button type="submit" class="btn btn-block btn-success">
                                    <i class="icon-ok"></i> 
                                </button> 

                            <div style="visibility:hidden;display:none;height:0px;" id="hiddenInputs">{{ form_rest(form) }}</div>  
                        </form> 
                    </div>
                </div>
                
            </div>
        </div>
            
        

        <div class="container col-lg-6" >
            <form id="EventImportForm"  class="input-append">
                <label for="EventImport">
                    <h3 class="text-success">Import Events from file  </h3>
                    <h5 class="text-info">Please, provide a OWL/RDF file</h5>
                    <h5 class="muted"><i>(such as : http://data.semanticweb.org/conference/eswc/2013/complete)</i></h5>
                </label>
                
                <div class="input-group">
                    <input id="EventImport" class="form-control" name="EventImport" value="../../../../ICANN2013.xml" type="text"/>
                    <span class="input-group-btn">
                        <button type="submit"class="btn btn-default">
                            Process import <i class="icon-arrow-right"></i> 
                        </button>
                    </span>
                </div><!-- /input-group --> 
            </form>
        </div>
        <div id="map" style="height:300px"></div>
    </div>

</div>
{% endblock body %}

{%  block stylesheets %}
{{ parent() }}
    <style type="text/css">
        #confNameForm > *{
            margin-top:1.5em;
            margin-bottom:0.35em;
        }
        #toggleConfNameForm{
            margin:2em 1em 0em 0em ; 
            float:left;
        }
        #confName:hover{
            border: 1px solid #ddd;
            padding: 0px;
        }
        #confName{
            padding: 1px;
        }
    </style>
     <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.css" />
{% endblock %}

{%  block javascripts %} 
{{ parent() }}
        <script src="{{ asset('bundles/fibewwwconf/js/importer/OWLImporter.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/rdf_config.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibewwwconf/js/importer/ocs_config.js') }}" type="text/javascript" ></script>
         <script src="http://cdn.leafletjs.com/leaflet-0.6.4/leaflet.js"></script>
        <script src="{{ asset('bundles/fibewwwconf/js/moment.min.js') }}" type="text/javascript" ></script>
        <script type="text/javascript" >

    /*

          function FormPost(uri,form,callback){
              $.ajax({
                  type: "POST",
                  url:uri,
                  async: false,
                  data: form.serialize(),
                  success:function(a,b,c) { 
                               if(callback)callback();
                  }
              });
          } 
      */ 
        function initializeMap(){
            // set up the map
    map = new L.Map('map');

    // create the tile layer with correct attribution
    var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    var osmAttrib='Map data Â© OpenStreetMap contributors';
    var osm = new L.TileLayer(osmUrl, {minZoom: 1, maxZoom: 15, attribution: osmAttrib});       

    // start the map in South-East England
    map.setView(new L.LatLng(51.3, 0.7),9);
    map.addLayer(osm);
        }   
        
        $(document).ready(function(){
             
            initializeMap();
            $('#confNameForm').hide();
            $('#showConfForm').click(function(){
                $('#confNameForm').show();
                $(this).hide();
            });
          
                
        /////////  init multiple Symf conf forms  END    /////////
        /////////  init multiple Symf conf forms  END    /////////
        /////////  init multiple Symf conf forms  END    /////////
             
            var confOwlUriInput = $('#EventImport' );
            //var confUriInput    = $('#fibe_bundle_wwwconfbundle_wwwconftype_confUri' );
            //var confNameInput   = $('#fibe_bundle_wwwconfbundle_wwwconftype_confName' );

            var isConfOwlUriInputOK = false;
            //var isConfUriInputOK = false; 
            //var isconfNameInputOK = true; 
            
            confOwlUriInput.change(function(){ isConfOwlUriInputOK = false});
            //confUriInput.change(function(){isConfUriInputOK = false});  
            
            var ConfRdfFile; 
            //var confName;
            var owlLessMode=false;
            
            
            // confUriInput.before(confUriHelper) 
            // confOwlUriInput.before(confOwlUriHelper) 
            // $('#SWCLinkForm label').remove();
            confOwlUriInput.change(function(){
                    $(this).parent().removeClass('has-warning');
            });
            $('#EventImportForm').submit(function(event) {
                event.preventDefault(); 
                if(confOwlUriInput.val() == "" ){
                    isConfOwlUriInputOK = false;
                    confOwlUriInput.parent().addClass('has-warning');
                }else{
                    isConfOwlUriInputOK = true;
                }

    //                 isConfOwlUriInputOK = true;
    //                 confOwlUriInput.parent().addClass('has-warning');
    //                 owlLessMode=true;
    //                 if(confNameInput.val() != "" ){
    //                     isconfNameInputOK = true;
    //                     confNameInput.parent().addClass('has-success'); 
    //                     send();
    //                 }else{
    //                     isconfNameInputOK = false;
    //                     confNameInput.parent().addClass('has-warning');
                    
    //                 }
    //             }else
				// {
				// 	owlLessMode=false;
				// }
                
                //test confUriInput : owl file
                
                if( isConfOwlUriInputOK )
                {
                    run(confOwlUriInput.val(),function(dataArray,confname)
                    {
    					owlLessMode=false;
    				    isConfOwlUriInputOK = true;
                        confName=confname;
                        // var data = $.param({dataArray:dataArray});
                        var data = {dataArray:JSON.stringify(dataArray)};
 
                        $.ajax({ //DBimport
                            type: "POST",
                            cache: false,  
                            url: "{{ path('schedule_admin_DBimport') }}",
                            data: data,
                            success:function(a,b,c)
                            {
                                if(dataArray!=undefined){
                                    var msg = "<ul>";
                                    for (var i in dataArray){
                                        if(dataArray[i].length >0)
                                            msg +="<li>"+dataArray[i].length +" "+i+" added !</li>"
                                    }
                                    msg += "</ul>";
                                    bootstrapAlert("success",' '+msg);
                                    confOwlUriInput.parent().addClass('has-success');
                                } 
                                
                            },
                            error:function(a,b,c)
                            {  
                                    bootstrapAlert("warning",'import failed because : '+c); 
                                    confOwlUriInput.parent().addClass('has-warning');  
                            },
                        });
                        
                    },function(msg)
                    {
                        confOwlUriInput.parent().addClass('has-warning');
                        bootstrapAlert("warning", msg || "there was an error import this file");
                    });
                }
                
                /*
                //test confUriInput : sparql endpoint
                if(!isConfUriInputOK){
                    $.ajax({
                        type: "GET",
                        cache: false,
                        url:confUriInput.val()+'?query=SELECT+DISTINCT+*+WHERE+%7B+%3Fs+%3Fp+%3Fo+%7D%0D%0ALIMIT+1', 
                        success:function()
                        { 
                            confUriInput.parent().addClass('has-success');
                            isConfUriInputOK = true;
                            send();
                        },
                        error:function() 
                        { 
                            confUriInput.parent().addClass('has-warning');
                        } 
                    }); 
                }
                */
                
              return false;
            }); 
            /*
            function send(){
                if(isConfUriInputOK && isConfOwlUriInputOK && isconfNameInputOK ) { 
                    $.ajax({ //form post
                            type: "POST",
                            url:"{{ path('schedule_conference_edit') }}",
                            async: false,
                            cache: false,
                            data: $('#SWCLinkForm').serialize(),
                            success:function(wwwConfId,b,c) 
                            { 
								if(owlLessMode==false){
								    confOwlUriInput.parent().addClass('has-success');
								    $.ajax({ //DBimport
								        type: "POST",
								        cache: false, 
								        url: "{{ app.request.getBaseURL() }}/admin/link/DBimport/"+wwwConfId ,
								        data: "dataArray=" + JSON.stringify(ConfRdfFile, null),
								        success:function(a,b,c)
								        {
								            if(ConfRdfFile!=undefined)
								                alert('"'+confName+'" has been well added :\n\t'+ConfRdfFile.events.length+' events\n\t'+ConfRdfFile.locations.length+' locations\n');
								            window.location.reload();
								            
								        },
								        error:function(a,b,c)
								        { 
								            alert("The conf file has been found, but import failed");
								            confOwlUriInput.parent().addClass('has-warning');
								        },
								    });
								}else
								{
									window.location.reload();
								}
                            }
                            ,error:function(a,b,c)
                            {
                                confOwlUriInput.parent().addClass('has-warning');
                            },
                        });
                }
            }*/
         }); 
         </script>   
{% endblock %}







