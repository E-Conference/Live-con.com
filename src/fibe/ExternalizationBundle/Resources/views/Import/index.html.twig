{% extends 'fibeExternalizationBundle::base.html.twig' %}

{% block title %}Equipment edit{% endblock title %}
{% block stylesheets_page %}

        <style>
        #drop{
                border:2px dashed #bbb;
                -moz-border-radius:5px;
                -webkit-border-radius:5px;
                border-radius:5px;
                padding:25px;
                text-align:center;
                font:20pt bold,"Vollkorn";color:#bbb
        }
        </style>
    {% endblock %}
{% block centerPanel %}
    {{ parent() }}


    <div class="col-sm-12 col-md-12 col-lg-12">
        <div id="page-data-file" class="page">
             <h2 class="text-info">Step 1 : Please select the file to import</h2>
            <div class="progress progress-striped">
              <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100" style="width: 10%">
                <span class="sr-only">10% Complete (success)</span>
              </div>
            </div>
           
            <form id="EventImportForm"  class="input-append">
                <label for="EventImport"> 
                    Available XML input format are : 
                        <span class="badge badge-success" ><i class="fa fa-check" ></i>  XML</span>
                        <span class="badge badge-success"><i class="fa fa-check" ></i>  XLS</span>
                      
                    {% if not wwwConf.isEmpty() %}<p class="text-warning"><i class="icon-s"></i>Your conference will be emptied first!</p>{% endif %}
                </label>
                
            
                <div class="input-group">
    				   <span class="input-group-addon">File to import</span>
                        <input id="EventImport" method="POST" action="/uploadDataset" class="form-control" name="EventImport" value="Choose your file" type="file"/>
                        <div id="drop">Drag your file here</div>
                </div>

                 
            </form> 

            <h3 class="text-info">Action</h3> 
            <a  class="empty-conf btn btn-danger btn-xs" 
                {% if  wwwConf.isEmpty() %}
                disabled="disabled" 
                {% else %} 
                {% endif %}
                href="{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}"> 
                <i class="fa fa-trash-o"></i> Empty conference
            </a>

             <a href="{{path('externalization_import_xls')}}">Test xls import</a>
        </div> 

        <div id="page-mapping-file" class="page" style="display:none;">
             <h2 class="text-info">Step 2 : Please select a mapping file to use</h2>
            <div class="progress progress-striped">
              <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 40%">
                <span class="sr-only">40% Complete (success)</span>
              </div>
            </div>
          
            <div class="input-group">
                      <span class="input-group-addon">Mapping file</span>
                  <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    Mapping file <span class="caret"></span>
                  </button>
                  <ul class="dropdown-menu" role="menu">
                    <li><a href="#">OCS format</a></li>
                    <li><a href="#">SWC format</a></li>
                  </ul>
            </div>
              <span class="input-group-btn">
                        <button disabled="disabled" type="submit"class="btn btn-default">
                            Process import <i class="icon-arrow-right"></i> 
                        </button>
                    </span>
            <button  type="submit" class="btn btn-default import"> Import data <i class="icon-arrow-right"></i> </button>
            <button id="page-step3" type="submit" class="btn btn-default"> New mapping file <i class="icon-arrow-right"></i> </button>
        </div>

        <div id="page-new-mapping-file" class="page" style="display:none;">
            <h2 class="text-info">Step 3 : Please proceed to the mapping</h2>
             <div class="progress progress-striped">
              <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100" style="width: 40%">
                <span class="sr-only">40% Complete (success)</span>
              </div>
            </div>
          
            <div id="datafile-form" class="col-sm-6 col-md-6 col-lg-6"></div>
            <div id="model-form"  class="col-sm-6 col-md-6 col-lg-6"></div>
            <button type="submit" class="btn btn-default import">Import your data <i class="icon-arrow-right"></i> </button>
            <button id="test-mapping" type="submit" class="btn btn-default">Test your mapping file <i class="icon-arrow-right"></i> </button>
        </div>   

        <div id="page-result" class="page" style="display:none;">
             <h2 class="text-info">final step : Congratulations! you're done</h2>
             <div class="progress progress-striped">
              <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                <span class="sr-only">100% Complete (success)</span>
              </div>
            </div>
            <h3 class="text-info">Results</h3>
            <div id="result-import"></div>
        </div>                      
    </div>


	<!-- Modal -->
	<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	  <div class="modal-dialog">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
	        <h3 class="modal-title" id="myModalLabel">Confirm empty</h3>
	      </div>
	      <div class="modal-body">
	        <form>
	          <div class="modal-body">
	            <h4 class="text-wrning">In order to confirm, type <b>Empty !</b> if you really want to empty the conference.</h4>
	            <div class="input-group input-group-lg"> 
	              <input name="confirmEmptyInput" id="confirmEmptyInput" type="text" class="form-control input-lg" value="Empty ?">
	            </div> 
	          </div>
	          <div class="modal-footer">
	            <a class="btn btn-default" data-dismiss="modal">Close</a>
	            <button type="submit" class="btn btn-primary">Save changes</button>
	          </div>
	        </form> 
	      </div>
	    </div><!-- /.modal-content -->
	  </div><!-- /.modal-dialog -->
	</div><!-- /.modal -->
   
 {% endblock %}


 {%  block javascripts_page %} 
  <script src="{{ asset('bundles/fibeexternalization/js/moment.min.js') }}" type="text/javascript" ></script>
    <script src="{{ asset('bundles/fibeexternalization/js/importer/Pager.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibeexternalization/js/importer/DBMapping/jsonModel.js') }}" type="text/javascript" ></script>
     <script src="{{ asset('bundles/fibeexternalization/js/importer/Mapper.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibeexternalization/js/importer/Importer.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibeexternalization/js/importer/rdf_config.js') }}" type="text/javascript" ></script>
        <script src="{{ asset('bundles/fibeexternalization/js/importer/ocs_config.js') }}" type="text/javascript" ></script>


        <script type="text/javascript" >

        $(document).ready(function(){

            /*********      handle schange page workflow  **********/
            Pager.initialize($("#page-data-file"));
            var dropDataFile = document.getElementById('drop');
            var selectDataFile = document.getElementById("EventImport");  
            var selectMappingFile = $('.import');
            var newMappingFile = document.getElementById('page-step3');
            if(dropDataFile.addEventListener) {
                dropDataFile.addEventListener('dragenter', handleDragover, false);
                dropDataFile.addEventListener('dragover', handleDragover, false);
                dropDataFile.addEventListener('drop', handleDataFileChange, false);
            }
            if(selectDataFile.addEventListener) {
                selectDataFile.addEventListener('change', handleDataFileChange, false);
            }
            if(newMappingFile.addEventListener) {
                newMappingFile.addEventListener('click', handleNewMappingFile, false);
            }
            selectMappingFile.on('click', handleImport);







            /*********       run the importer and send the serialized obj to php   **********/ 
            var ConfRdfFile; 


            /*********       confirm empty          **********/
            $('.empty-conf').click(function(){
                confirmEmpty(function(){
                    window.location = "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}";
                })
                return false;
            }); 


            //parse file
            var confOwlUriInput = document.getElementById("EventImport");  
            var dataArray;

            

            // $(confOwlUriInput).off("change").on("change",function(){
            //     $(this).parent().removeClass('has-success');
            //     dataArray = undefined;
            //     $('#EventImportForm [type="submit"]').attr("disabled","disabled")
            //                                          .removeClass("btn-success")
            //                                          .addClass("btn-default");

            //     reader.readAsText(this.files[0]); 
            // })

            //empty conf if needed
            $('#EventImportForm').submit(function(event) {  
                if(!dataArray){ 
                    bootstrapAlert("info",' please, choose a file to import'); 
                    return false;
                }

                {% if not wwwConf.isEmpty() %} 
                    confirmEmpty(function(){
                        bootstrapAlert("info",' emptying the conference...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                        $.ajax({ 
                                type: "GET",
                                cache: false,  
                                url: "{{ path('schedule_conference_empty', { 'id': wwwConf.id }) }}",
                                success:function(a,b,c)
                                {
                                    bootstrapAlert("success",'conference emptied');
                                    bootstrapAlert("success",' now sending file...',"conference emptied,","<i class='icon-spinner icon-spin'></i>"); 
                                    sendSerializedConf(dataArray);
                                },
                                error:function(a,b,c)
                                { 
                                    console.log("ERROR empting the conf")
                                    console.log(a)
                                    console.log(b)
                                    console.log(c) 
                                },
                            });
                    }) 
                {% else %} 
                    bootstrapAlert("info",' sending file...',"Info : ","<i class='icon-spinner icon-spin'></i>");
                    sendSerializedConf(dataArray);
                {% endif %}
                return false;
            }); 


            //send file
            function sendSerializedConf(dataArray){
                var data = {dataArray:JSON.stringify(dataArray)};
                //DBimport
                $.ajax({ 
                    type: "POST",
                    cache: false,  
                    url: "{{ path('schedule_admin_DBimport') }}",
                    data: data,
                    success:function(a,b,c)
                    {
                        bootstrapAlert("success",' '+getMsgUl(dataArray,"added")+'Please refresh this page to find out imported items.'); 
                    },
                    error:function(a,b,c)
                    {
                        bootstrapAlert("warning",'import failed because : '+c);
                        console.log(a)
                        console.log(b)
                        console.log(c)
                        $(confOwlUriInput).parent().addClass('has-warning');  
                    },
                });
            }
         }); 

    
        function confirmEmpty(callback){ 
            $('#confirmModal').modal('show');
            $('#confirmModal').one('shown.bs.modal', function() {
                $(this).find("input").first().focus();
            }) 
            $('#confirmModal').find("form").one("submit",function(e){
                                    if($('#confirmEmptyInput').val() === "Empty !"){
                                        callback();
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                                    else{
                                        bootstrapAlert("info",' Conference clear cancelled.');
                                        $('#confirmModal').modal('hide');
                                        return false;
                                    }
                              });
        }
 
        function getMsgUl(dataArray,endString){
            var msg = "";
            if(dataArray.conference.setAcronym)msg += dataArray.conference.setAcronym;
            else if(dataArray.conference.setSummary)msg += dataArray.conference.setSummary;
            msg += "<ul>"; 
            for (var i in dataArray) 
                if(dataArray[i] && dataArray[i].length >0)
                    msg +="<li>"+dataArray[i].length +" "+i+" "+endString+" !</li>"

            return msg + "</ul>";
        }


         function handleDataFileChange(e) {

                e.stopPropagation();
                e.preventDefault();

                console.log("drop");
              
                Pager.changePage('#page-mapping-file');
                var file = "";
                if(e.dataTransfer){
                    file = e.dataTransfer.files[0];
                }else{
                    file = this.files[0];
                }

                Mapper.initialize(file);
              
          
             
                // reader.onload = function(e) {
                //     run( this.result,function(data){
                //         dataArray = data;
                //         bootstrapAlert("info",' '+getMsgUl(dataArray,"found"),"Info : ");
                //         $('#EventImportForm [type="submit"]').removeAttr("disabled")
                //                                              .removeClass("btn-default")
                //                                              .addClass("btn-success");
                //         $(confOwlUriInput).parent().addClass('has-success');
                //     },function(msg)
                //     {
                //         $(confOwlUriInput).parent().addClass('has-warning');
                //         bootstrapAlert("warning", msg || "there was an error importing this file");
                //     });  
                // }
                // for (i = 0, f = files[i]; i != files.length; ++i) {
                //         var reader = new FileReader();
                //         var name = f.name;
                //         reader.onload = function(e) {
                //                 var data = e.target.result;
                //                 if(typeof Worker !== 'undefined') {
                //                         xlsxworker(data, process_wb);
                //                 } else {
                //                         //var wb = XLSX.read(data, {type: 'binary'});
                //                         var arr = String.fromCharCode.apply(null, new Uint8Array(data));
                //                         var wb = XLSX.read(btoa(arr), {type: 'base64'});
                //                         process_wb(wb);
                //                 }
                //         };
                //         //reader.readAsBinaryString(f);
                //         reader.readAsArrayBuffer(f);
                // }
        }

        function handleDragover(e) {
                e.stopPropagation();
                e.preventDefault();
                e.dataTransfer.dropEffect = 'copy';
        }


         function handleImport(e) {
                e.stopPropagation();
                e.preventDefault();
                Pager.changePage('#page-result');
        }

        function handleNewMappingFile(e) {

                e.stopPropagation();
                e.preventDefault();

                Pager.changePage('#page-new-mapping-file');
                Mapper.read("#datafile-form");
                Model.modelToTab($("#model-form")) ;
        }
         </script>   
{% endblock %}

